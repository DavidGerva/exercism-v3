concept,category
functions,functional
functions.multi-line,functional
functions.one-line,functional
functions.argument-positioning-conventions,functional
functions.default-arguments,functional
functions.capture-syntax,functional
anonymous-functions,functional
higher-order-functions,functional
immutability,functional
pattern-matching,functional
pipelines,functional
recursion,functional
tail-call-optimization,functional
beam-vm,platform-specific
processes,platform-specific
agent-concurrency-model,platform-specific
erlang-interoperation,platform-specific
string-vs-charlist,platform-specific
string-vs-charlist.unicode-encoding,platform-specific
string-vs-charlist.byte-size-vs-length,platform-specific
repl,platform-specific
mix,platform-specific
mix.directory-structure,platform-specific
mix.tasks,platform-specific
eager-computation,platform-specific
lazy-computation,platform-specific
guards,platform-specific
compiling,platform-specific
scripts-vs-code,platform-specific
arithmetic,fundamentals
operators.basic,fundamentals
operators.logical,fundamentals
operators.comparison,fundamentals
control-structures,control-flow
try-catch-rescue,control-flow
literals,fundamentals
atom,types
integer,types
integer.forms,types
integer.codepoints,types
float,types
float.scientific-notation,types
binary,types
binary.string,types
binary.special-forms,types
list,types
list.chardata,types
list.charlist,types
list.comprehensions,types
list.iodata,types
list.keyword,types
list.notation,types
tuple,types
function,types
reference,types
pid,types
map,types
struct,types
range,types
stream,types
port,types
abstract-syntax-tree,
let-it-crash,
macros,
modules.alias,
modules.attributes,
modules.import,
modules.require,
modules.use,
naming,
naming.bang,
naming.is-prefix,
naming.question-mark,
protocols.data-types,
protocols.polymorphism,
protocols.structs,
type-comparison-hierarchy,